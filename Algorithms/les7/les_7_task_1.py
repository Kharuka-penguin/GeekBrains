# 1. Отсортируйте по убыванию методом пузырька одномерный целочисленный массив, заданный случайными
# числами на промежутке [-100; 100). Выведите на экран исходный и отсортированный массивы.
# Примечания:
# a. алгоритм сортировки должен быть в виде функции, которая принимает на вход массив данных,
# b. постарайтесь сделать алгоритм умнее, но помните, что у вас должна остаться сортировка пузырьком.
# Улучшенные версии сортировки, например, расчёской, шейкерная и другие в зачёт не идут.

# Улучшение заключается в проверке исходного массива на отсортированность. Если в функцию подается
# отсортированный ряд, после проверки поднимается флаг(changed) и функция завершает свою работу. Для сравнения написана
# строка с отсортированным my_list - закомментирована (закомментируйте 15 строку, раскомментируйте 16)

from random import randint
import cProfile

my_list = [randint(-100, 99) for i in range(500)]
# my_list = [i for i in range(500)]
print(my_list)


def bubble_sort(array):
    changed = True
    while changed:
        changed = False
        for i in range(len(array) - 1):
            if array[i] > array[i + 1]:
                array[i], array[i + 1] = array[i + 1], array[i]
                changed = True


print(cProfile.run('bubble_sort(my_list)'))
print(my_list)
